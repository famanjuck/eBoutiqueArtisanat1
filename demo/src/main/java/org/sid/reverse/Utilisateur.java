package org.sid.reverse;
// Generated 30 avr. 2019 01:04:31 by Hibernate Tools 3.6.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur", schema = "public")
public class Utilisateur implements java.io.Serializable {

	private int idUtilisateur;
	private String nom;
	private String prenom;
	private Integer cni;
	private String adress;
	private Integer numtel;
	private String login;
	private String password;
	private String profile;
	private Administrateur administrateur;
	private Set<Role> roles = new HashSet(0);
	private Superviseur superviseur;
	private Client client;
	private Artisan artisan;

	public Utilisateur() {
	}

	public Utilisateur(int idUtilisateur) {
		this.idUtilisateur = idUtilisateur;
	}

	public Utilisateur(int idUtilisateur, String nom, String prenom, Integer cni, String adress, Integer numtel,
			String login, String password,String profile, Administrateur administrateur, Set<Role> roles, Superviseur superviseur,
			Client client, Artisan artisan) {
		this.idUtilisateur = idUtilisateur;
		this.nom = nom;
		this.prenom = prenom;
		this.cni = cni;
		this.adress = adress;
		this.numtel = numtel;
		this.login = login;
		this.password = password;
		this.password = profile;
		this.administrateur = administrateur;
		this.roles = roles;
		this.superviseur = superviseur;
		this.client = client;
		this.artisan = artisan;
	}

	public String getProfile() {
		return profile;
	}

	public void setProfile(String profile) {
		this.profile = profile;
	}

	@Id

	@Column(name = "id_utilisateur", unique = true, nullable = false)
	public int getIdUtilisateur() {
		return this.idUtilisateur;
	}

	public void setIdUtilisateur(int idUtilisateur) {
		this.idUtilisateur = idUtilisateur;
	}

	@Column(name = "nom", length = 254)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenom", length = 254)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "cni")
	public Integer getCni() {
		return this.cni;
	}

	public void setCni(Integer cni) {
		this.cni = cni;
	}

	@Column(name = "adress", length = 254)
	public String getAdress() {
		return this.adress;
	}

	public void setAdress(String adress) {
		this.adress = adress;
	}

	@Column(name = "numtel")
	public Integer getNumtel() {
		return this.numtel;
	}

	public void setNumtel(Integer numtel) {
		this.numtel = numtel;
	}

	@Column(name = "login", length = 254)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", length = 254)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Administrateur getAdministrateur() {
		return this.administrateur;
	}

	public void setAdministrateur(Administrateur administrateur) {
		this.administrateur = administrateur;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Set<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Superviseur getSuperviseur() {
		return this.superviseur;
	}

	public void setSuperviseur(Superviseur superviseur) {
		this.superviseur = superviseur;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Artisan getArtisan() {
		return this.artisan;
	}

	public void setArtisan(Artisan artisan) {
		this.artisan = artisan;
	}

}
