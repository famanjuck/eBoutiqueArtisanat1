package org.sid.reverse;
// Generated 30 avr. 2019 01:04:31 by Hibernate Tools 3.6.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Commande generated by hbm2java
 */
@Entity
@Table(name = "commande", schema = "public")
public class Commande implements java.io.Serializable {

	private int numcommande;
	private Livraison livraison;
	//private Client client;
	private Set<Facture> factures = new HashSet(0);
/*	private Set<Lignedecommande> lignedecommandes = new HashSet(0);, Set<Lignedecommande> lignedecommandes
*/
	public Commande() {
	}

	public Commande(int numcommande, Livraison livraison, Client client) {
		this.numcommande = numcommande;
		this.livraison = livraison;
		//this.client = client;
	}

	public Commande(int numcommande,Livraison livraison, Client client, Set<Facture> factures) {
		this.numcommande = numcommande;
		this.livraison = livraison;
		//this.client = client;
		this.factures = factures;
/*		this.lignedecommandes = lignedecommandes;
*/	}

	@Id

	@Column(name = "numcommande", unique = true, nullable = false)
	public int getNumcommande() {
		return this.numcommande;
	}

	public void setNumcommande(int numcommande) {
		this.numcommande = numcommande;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_livraison", nullable = false)
	@JsonIgnoreProperties("commandes")
	public Livraison getLivraison() {
		return this.livraison;
	}

	public void setLivraison(Livraison livraison) {
		this.livraison = livraison;
	}

/*	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_utilisateur", nullable = false)
	@JsonIgnoreProperties("commandes")
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}*/

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "commande")
	@JsonIgnoreProperties("commande")
	public Set<Facture> getFactures() {
		return this.factures;
	}

	public void setFactures(Set<Facture> factures) {
		this.factures = factures;
	}

	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "commande")
	@JsonIgnoreProperties("commande")
	public Set<Lignedecommande> getLignedecommandes() {
		return this.lignedecommandes;
	}

	public void setLignedecommandes(Set<Lignedecommande> lignedecommandes) {
		this.lignedecommandes = lignedecommandes;
	}*/

}
