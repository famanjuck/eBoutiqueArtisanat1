package org.sid.reverse;
// Generated 30 avr. 2019 01:04:31 by Hibernate Tools 3.6.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer","handler"})
public class Article implements java.io.Serializable {

	private int idArticle;
	private Artisan artisan;
	private Sectionart sectionart;
	private String designation;
	private String libellet;
	private String photo;
	private Integer prix;
	private Integer quantite;
	private Date datepulication;
	
	

	/*	private Set<Lignedecommande> lignedecommandes = new HashSet(0);
*/
	public Article() {
	}

	public Article(int idArticle, Artisan artisan, Sectionart sectionart) {
		this.idArticle = idArticle;
		this.artisan = artisan;
		this.sectionart = sectionart;
	}

	public Article(int idArticle, Artisan artisan, Sectionart sectionart, String designation,
			String libellet, String photo, Integer prix, Integer quantite, Date datepulication) {
		super();
		this.idArticle = idArticle;
		this.artisan = artisan;
		this.sectionart = sectionart;
		this.designation = designation;
		this.libellet = libellet;
		this.photo = photo;
		this.prix = prix;
		this.quantite = quantite;
		this.datepulication = datepulication;
		
		
	}
	@Id

	@Column(name = "id_article", unique = true, nullable = false)
	public int getIdArticle() {
		return this.idArticle;
	}

	public void setIdArticle(int idArticle) {
		this.idArticle = idArticle;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_utilisateur")
	@JsonIgnoreProperties("articles")
	public Artisan getArtisan() {
		return this.artisan;
	}

	public void setArtisan(Artisan artisan) {
		this.artisan = artisan;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idsection")
	@JsonIgnoreProperties("articles")
	public Sectionart getSectionart() {
		return this.sectionart;
	}

	public void setSectionart(Sectionart sectionart) {
		this.sectionart = sectionart;
	}

	@Column(name = "designation", length = 254)
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	@Column(name = "libellet", length = 254)
	public String getLibellet() {
		return this.libellet;
	}

	public void setLibellet(String libellet) {
		this.libellet = libellet;
	}

	@Column(name = "photo", length = 254)
	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	@Column(name = "prix")
	public Integer getPrix() {
		return this.prix;
	}

	public void setPrix(Integer prix) {
		this.prix = prix;
	}

	@Column(name = "quantite")
	public Integer getQuantite() {
		return this.quantite;
	}

	public void setQuantite(Integer quantite) {
		this.quantite = quantite;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datepulication", length = 13)
	public Date getDatepulication() {
		return this.datepulication;
	}

	public void setDatepulication(Date datepulication) {
		this.datepulication = datepulication;
	}
	
	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "article")
	@JsonIgnoreProperties("article")
	public Set<Lignedecommande> getLignedecommandes() {
		return this.lignedecommandes;
	}

	public void setLignedecommandes(Set<Lignedecommande> lignedecommandes) {
		this.lignedecommandes = lignedecommandes;
	}*/

}
